#! /usr/bin/env lua

local VERSION = 0.7

local status, moonpick = pcall(require, "moonpick")
if not status then
  local local_path = ';./src/?.lua;./src/?/init.lua'
  package.path = package.path .. local_path
  status, moonpick = pcall(require, "moonpick")
end

if not status then
  error "`moonpick` module not found, problems with the installation?"
end

local function validate_usage(args)
  local bail = function()
    print [[
Usage: moonpick [opts] <file>, [file2, ..]

Where [opts] can be the following:

-v                Shows moonpick version
-h                Shows this help
--filename file   Filename used for lint_config with stdin

-                 Read from stdin, must be last argument
]]
    os.exit(1)
  end

  if #args == 0 then bail() end
  local opts = {}
  for i, a in ipairs(args) do
    if a == "-" then
      opts.stdin = true
      break
    elseif a:match('^%-') then
      if a == '-v' or a == '--version' then
        print("Moonpick version " .. VERSION)
        os.exit(0)
      elseif a == '--filename' then
          local file = args[i + 1]
          if not file then
            print("Missing value for option --filename")
            os.exit(0)
          end
          opts.filename = args[i + 1]
      else
        bail()
      end
    end
  end
  return opts
end

local args = {...}
local opts = validate_usage(args)

local errors = 0
local function lint(linter, filename)
  local inspections, err = linter()
  if not inspections then
    errors = errors + 1
    if filename then
      print(filename .. '\n')
    end
    print(err)
  else
    if #inspections > 0 then
      if filename then
        print(filename .. '\n')
      end
      errors = errors + #inspections
      print(moonpick.format_inspections(inspections))
    end
  end
end

if opts.stdin then
  local source = io.stdin:read('*a')
  local config = {}
  if opts.filename then
    local moonpick_config = require('moonpick.config')
    local config_file = moonpick_config.config_for(opts.filename)
    config = config_file and moonpick_config.load_config_from(config_file, opts.filename) or {}
  end

  lint(function() return moonpick.lint(source, config) end, opts.filename)
  os.exit(errors > 0 and 1 or 0)
end

for i = 1, #args do
  local file = args[i]
  lint(function() return moonpick.lint_file(file) end, file)
end

os.exit(errors > 0 and 1 or 0)
